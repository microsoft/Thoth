@page "/chat"

<!-- This page is intended for conversational Q&A. -->

<PageTitle>Chat</PageTitle>

<MudGrid Justify="Justify.Center" Class="overflow-x-visible">
    <MudItem id="answers" xs="12" Class="overflow-x-visible">
        @if (!_questionAndAnswerMap.Any())
        {
            <div class="d-flex align-content-center flex-wrap flex-grow-1 full-height">
                <Examples Message="Chat with your data" OnExampleClicked="@OnAskQuestionAsync" />
            </div>
        }
        else
        {
            <MudStack Reverse="@IsReversed" Spacing="12">
                @foreach (var ((question, askedOn), answer) in _questionAndAnswerMap)
                {
                    <MudStack Justify="Justify.Center" AlignItems="AlignItems.Start" Spacing="4">
                        <MudBadge Origin="Origin.TopLeft" Overlap="true" Color="Color.Secondary"
                                  Icon="@Icons.Material.Filled.QuestionMark" Class="d-flex align-self-end">
                            @*   <MudBadge Overlap="true" Color="Color.Inherit"
                    Icon="@Icons.Material.Filled.PushPin" Class="d-flex align-self-end">
                    <MudPaper Class="pa-6 d-flex flex-column" Elevation="3">
                    <MudText Typo="Typo.body1" Align="Align.End">
                    @question
                    </MudText>
                    <MudText Typo="Typo.caption" Align="Align.End" Color="Color.Secondary">
                    @($"Asked at {askedOn:h:mm:ss tt} on {askedOn:M/dd/yy}")
                    </MudText>
                    </MudPaper>
                    </MudBadge> *@

                            <MudPaper Class="pa-6 d-flex flex-column" Elevation="3">

                                <MudText Typo="Typo.body1" Align="Align.End">
                                    @question
                                </MudText>
                                <MudText Typo="Typo.caption" Align="Align.End" Color="Color.Secondary">
                                    @($"Asked at {askedOn:h:mm:ss tt} on {askedOn:M/dd/yy}")
                                </MudText>
                            </MudPaper>
                            <button onclick="@(() => OnPinQuestion(question, askedOn))" class="mud-badge mud-badge-icon mud-badge-top right mud-elevation-0 mud-badge-overlap">
                                <MudIcon Icon="@(PinIcon(question))" aria-label="pin" Variant="@Variant.Outlined"></MudIcon>
                            </button>
                          @*   <MudIconButton 
                                Icon="@(PinIcon(question))" aria-label="pin" 
                                Variant="@Variant.Outlined"
                                Class="absolute mud-badge mud-badge-top right mud-badge-overlap">
                            </MudIconButton> *@
                        </MudBadge>
                        <div class="ten-twelves">
                            @if (answer is null)
                            {
                                <MudBadge Origin="Origin.TopLeft" Overlap="true" Color="Color.Secondary"
                                          Icon="@Icons.Material.Filled.Lightbulb" Class="full-width">
                                    <MudPaper Class="pa-6" Elevation="3">
                                        <Loading />
                                    </MudPaper>
                                </MudBadge>
                            }
                            else if (answer is { Error.Length: > 0 })
                            {
                                <MudBadge Origin="Origin.TopLeft" Overlap="true" Color="Color.Error"
                                          Icon="@Icons.Material.Filled.Error">
                                    <AnswerError Error="@answer" Question="@question"
                                                 OnRetryClicked="@OnAskQuestionAsync" />
                                </MudBadge>
                            }
                            else
                            {
                                <MudBadge Origin="Origin.TopLeft" Overlap="true" Color="Color.Secondary"
                                          Icon="@Icons.Material.Filled.AutoAwesome"
                                          Style="display:inherit">
                                    <Answer Retort="@answer.Choices[0]" FollowupQuestionClicked="@OnAskQuestionAsync" />
                                </MudBadge>
                            }
                        </div>
                    </MudStack>
                }
            </MudStack>
        }
    </MudItem>
    <MudItem xs="12" Class="rounded">
        <MudGrid>
            <MudItem xs="12" lg="10">
                <VoiceTextInput @bind-Value="_userQuestion" Label="Prompt"
                                Icon="@Icons.Material.Filled.QuestionAnswer"
                                Placeholder="Enter OpenAI + Azure Search prompt"
                                HelperText="Use Shift + Enter for new lines."
                                Disabled=@_isReceivingResponse
                                OnEnterKeyPressed="OnAskClickedAsync" />
            </MudItem>
            <MudItem xs="0" lg="2" Class="d-flex align-self-center">
                <MudGrid Justify="Justify.Center">
                    <MudItem xs="6" Class="pa-2">
                        <MudFab Color="Color.Secondary" Size="Size.Large"
                                StartIcon=@Icons.Material.Filled.Send Class="full-width"
                                Label="Chat" aria-label="Ask question button."
                                OnClick="@OnAskClickedAsync"
                                Disabled=@(_isReceivingResponse || string.IsNullOrWhiteSpace(_userQuestion)) />
                    </MudItem>

                    <MudItem xs="3" Class="pa-2">
                        <MudTooltip Arrow="true" Text="Save chat history" Placement="Placement.Top">
                            <MudFab Color="Color.Primary" Size="Size.Medium"
                                    StartIcon=@Icons.Material.Filled.Save
                                    aria-label="Save chat."
                                    OnClick="@OnSaveChat" Disabled=@(!string.IsNullOrWhiteSpace(ChatSessionId) || _isReceivingResponse || _questionAndAnswerMap is { Count: 0 }) />
                        </MudTooltip>
                    </MudItem>


                    <MudItem xs="3" Class="pa-2">
                        <MudTooltip Arrow="true" Text="Clear chat history" Placement="Placement.Top">
                            <MudFab Color="Color.Primary" Size="Size.Medium"
                                    StartIcon=@Icons.Material.Filled.DeleteForever
                                    aria-label="Clear chat."
                                    OnClick="@OnClearChat" Disabled=@(_isReceivingResponse || _questionAndAnswerMap is { Count: 0 }) />
                        </MudTooltip>
                    </MudItem>
                </MudGrid>
            </MudItem>
        </MudGrid>
    </MudItem>
    <MudScrollToTop Selector="#answers"
                    VisibleCssClass="visible absolute"
                    HiddenCssClass="invisible">
        <MudFab Color="Color.Primary" IconSize="Size.Large" StartIcon="@Icons.Material.Filled.ArrowUpward" />
    </MudScrollToTop>
</MudGrid>
